@* This now accepts the list of friends from the controller *@
@model IEnumerable<PRN232_Project_MVC.Models.FriendViewModel>
@using System.Text.Json

@{
    ViewData["Title"] = "Friends";
    var userJson = Context.Session.GetString("User");
    string? displayName = null;
    if (!string.IsNullOrEmpty(userJson))
    {
        try
        {
            using var doc = JsonDocument.Parse(userJson);
            if (doc.RootElement.TryGetProperty("FullName", out var fn) && fn.ValueKind == JsonValueKind.String && !string.IsNullOrWhiteSpace(fn.GetString()))
                displayName = fn.GetString();
            else if (doc.RootElement.TryGetProperty("Username", out var un))
                displayName = un.GetString();
        }
        catch { displayName = null; }
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ChatApp</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="~/css/friend.css" rel="stylesheet" />
</head>
<body>

    <header class="main-header">
        <div class="header-container">
            <a href="/Home/index" class="logo">ChatApp</a>
            <nav class="main-nav">
                <a href="/User/friend" class="active">Friends</a>
                <a href="/User/setting">Settings</a>
                <a href="/User/block">Block</a>
                @if (!string.IsNullOrEmpty(displayName))
                {
                    <div class="user-actions">
                        <span class="user-greeting">@displayName</span>
                        <form method="post" asp-controller="User" asp-action="Logout" class="logout-form">
                            <button type="submit" class="btn-logout">Log out</button>
                        </form>
                    </div>
                }
                else
                {
                    <a href="@Url.Action("login", "User")">Sign In</a>
                }
            </nav>
        </div>
    </header>

    <main class="container">
        <div class="page-header">
            <h1>Friends List</h1>
        </div>

        <!-- This form now submits to the controller to perform the search -->
        <form asp-controller="User" asp-action="friend" method="get" class="search-bar">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
            </svg>
            <!-- The name "searchInput" matches the controller action parameter -->
            <!-- The value is set to what you previously searched for -->
            <input type="text" name="searchInput" placeholder="Search friends..." value="@ViewData["CurrentSearch"]">
        </form>

        @if (Model != null && Model.Any())
        {
            <ul class="friends-list">
                @foreach (var friend in Model)
                {
                    <li class="friend-item">
                        <div class="friend-info">
                            <img src="@(friend.AvatarUrl ?? "/images/default-avatar.png")" alt="Avatar">
                            <div class="friend-details">
                                <div class="username">@friend.Username</div>
                                <div class="fullname">@friend.FullName</div>
                            </div>
                        </div>

                        <div class="friend-actions">
                            <a href="#" class="btn btn-message">Message</a>
                            
                            <!-- This form will post to your UserController's Unfriend action -->
                            <form asp-controller="User" asp-action="Unfriend" asp-route-friendId="@friend.UserId" method="post">
                                <button type="submit" class="btn btn-unfriend">Unfriend</button>
                            </form>

                            <!-- This form will post to your UserController's BlockUser action -->
                            <form asp-controller="User" asp-action="BlockUser" asp-route-blockedId="@friend.UserId" method="post">
                                <button type="submit" class="btn btn-block">Block</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="no-results">No friends found.</div>
        }
    </main>

    <!-- This page no longer needs friend.js, but you can keep it for other dynamic features -->
    <!-- <script src="~/js/friend.js"></script> -->

</body>
</html>
